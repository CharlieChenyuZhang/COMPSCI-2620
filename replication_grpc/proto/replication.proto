syntax = "proto3";

package replication;

// RPC for replicating log entries (and heartbeat messages)
service ReplicationService {
  // Existing RPC methods
  rpc AppendEntry (AppendEntryRequest) returns (AppendEntryResponse);
  rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse);
  
  // New RPC method for server discovery
  rpc AnnounceNode (AnnounceRequest) returns (AnnounceResponse);
}

message AnnounceRequest {
  string node_id = 1;
  string replication_address = 2;
}

message AnnounceResponse {
  bool success = 1;
  repeated string peer_addresses = 2;
}

// Message for appending an entry (including heartbeat messages)
message AppendEntryRequest {
  string entry_json = 1;
}

message AppendEntryResponse {
  bool success = 1;
  int32 term = 2;
}

// Message for requesting a vote during leader election
message RequestVoteRequest {
  int32 term = 1;
  string candidate_id = 2;
}

// Message for responding to a vote request
message RequestVoteResponse {
  bool vote_granted = 1;
  int32 term = 2;
}

message SendMessageResponse {
    bool success = 1;
    string message = 2;
    string message_id = 3;
}