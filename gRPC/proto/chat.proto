syntax = "proto3";

package chat;

service ChatService {
  // Account management
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);
  rpc DeleteAccount(DeleteAccountRequest) returns (StatusResponse);

  // Message operations 
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc LoadUnreadMessages(LoadMessagesRequest) returns (LoadMessagesResponse);
  rpc DeleteMessage(DeleteMessageRequest) returns (StatusResponse);

  // Real-time notifications
  rpc SubscribeToUpdates(SubscribeRequest) returns (stream UpdateNotification);
}

message CreateAccountRequest {
  string username = 1;
  string password = 2;
}

message CreateAccountResponse {
  bool success = 1;
  string message = 2;
  int32 unread_count = 3;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  map<string, int32> unread_counts = 3;  // Maps usernames to their unread counts
  string session_id = 4;
}

message ListAccountsRequest {
  string pattern = 1;
  string username = 2;  // Username of requester
}

message ListAccountsResponse {
  repeated AccountInfo accounts = 1;
}

message AccountInfo {
  string username = 1;
  int32 unread_count = 2;
}

message SendMessageRequest {
  string sender = 1;
  string recipient = 2;
  string content = 3;
}

message SendMessageResponse {
  bool success = 1;
  string message = 2;
  int64 message_id = 3;
}

message LoadMessagesRequest {
  string username = 1;
  string other_user = 2;  // Optional: for loading messages with specific user
}

message LoadMessagesResponse {
  repeated Message messages = 1;
}

message Message {
  int64 id = 1;
  string sender = 2;
  string content = 3;
  string timestamp = 4;
}

message DeleteMessageRequest {
  int64 message_id = 1;
  string username = 2;  // For authorization
}

message DeleteAccountRequest {
  string username = 1;
  string password = 2;
}

message StatusResponse {
  bool success = 1;
  string message = 2;
}

message SubscribeRequest {
  string username = 1;
}

message ReadMessagesRequest {
    string username = 1;
    string recipient = 2; 
    int32 count = 3; 
}

message UserOnline {
    string username = 1;
}

message UserOffline {
    string username = 1;
}

message UpdateNotification {
    oneof update {
        MessageReceived message_received = 1;
        MessageDeleted message_deleted = 2;
        AccountDeleted account_deleted = 3;
        UserOnline user_online = 4;
        UserOffline user_offline = 5;
    }
}

message MessageReceived {
  int64 message_id = 1;
  string sender = 2;
  string content = 3;
  string timestamp = 4;
}

message MessageDeleted {
  int64 message_id = 1;
}

message AccountDeleted {
  string username = 1;
}